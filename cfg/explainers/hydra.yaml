# @package _global_
defaults:
  - /base/defaults/general_args: default # we map /default_args/general_args -> /args/general_args to keep it clean, simialrly all other default args
  - /base/defaults/data_loader_args: default
  - /base/defaults/train_val_sampler: null # random_split, stratified_split, etc
  - /base/defaults/train_preprocess_augs: null
  - /base/defaults/eval_preprocess_augs: null
  - /base/defaults/train_realtime_augs: null
  - /base/defaults/eval_realtime_augs: null
  - /base/defaults/training_args: default
  - /base/data_args: "???"
  - /base/model_args: "???"
  - _self_

hydra:
  run:
    dir: ${args.general_args.root_output_dir}/${args.data_args.dataset_name}_${resolve_dir_name:${args.model_args.model_directory_name}}/${explanation_method}/
  output_subdir: hydra
  job:
    chdir: False

# data loader args
args:
  general_args:
    root_output_dir: ${oc.env:TORCH_XAI_OUTPUT_DIR}/explainers
  data_args:
    dataset_config_name: ${dataset_config_name}
    dataset_kwargs:
      max_samples: 100
  data_loader_args:
    per_device_train_batch_size: ${per_device_train_batch_size}
    per_device_eval_batch_size: ${per_device_eval_batch_size}
    dataloader_num_workers: ${dataloader_num_workers}
    use_val_set_for_test: ${use_val_set_for_test}
    max_test_samples: ${max_test_samples}
    max_train_samples: ${max_train_samples}
    max_val_samples: ${max_val_samples}
  model_args:
    model_config:
      model_constructor_args:
        checkpoint: ${checkpoint}
        checkpoint_state_dict_key: ${checkpoint_state_dict_key}

# data args
dataset_config_name: default
image_size_x: 224
image_size_y: 224

# necessary dataloader args
per_device_train_batch_size: 1
per_device_eval_batch_size: 1
dataloader_num_workers: 0
max_test_samples: null
max_train_samples: null
max_val_samples: null
use_val_set_for_test: true

# checkpoint args
checkpoint: '???' # model checkpoint path if required
checkpoint_state_dict_key: model
test_model: true
segmentation_fn: slic
segmentation_fn_kwargs:
  n_segments: 100
  compactness": 1
  sigma: 1
# segmentation_fn: grid
# segmentation_fn_kwargs:
#   cell_size: 16

explanation_method: deep_lift
metrics: # metrics and their parameters
  # axiomatic
  completeness:
    name: completeness
  monotonicity_corr_and_non_sens: # this gives both faithfulness monotonicity and axoimatic non sensitivity
    name: monotonicity_corr_and_non_sens

  # complexity
  complexity:
    name: complexity
  effective_complexity:
    name: effective_complexity
  sparseness:
    name: sparseness

  # faithfulness
  infidelity_0.5:
    name: infidelity
    perturbation_probability: 0.5
    n_perturb_samples: 100
    max_examples_per_batch: 10
  infidelity_0.25:
    name: infidelity
    perturbation_probability: 0.25
    n_perturb_samples: 100
    max_examples_per_batch: 10
  infidelity_0.1:
    name: infidelity
    perturbation_probability: 0.1
    n_perturb_samples: 100
    max_examples_per_batch: 10
  aopc:
    name: aopc
    max_features_processed_per_batch: 24
    total_features_perturbed: 100
  faithfulness_corr:
    name: faithfulness_corr
    pertub_func_type: random
    perturbation_noise_scale: 0.02
    n_perturb_samples: 100
    max_examples_per_batch: 10
    perturbation_probability: 0.1
  faithfulness_estimate:
    name: faithfulness_estimate
    max_features_processed_per_batch: 10
    show_progress: True
  monotonicity:
    name: monotonicity
    max_features_processed_per_batch: 10
    show_progress: True

  # # # robustness
  # # sensitivity:
  # #   name: sensitivity

start_idx: null
end_idx: null
n_test_samples: null
train_baselines_size: 100
visualize_explanations: true

# metrics possible
# metrics : [
# axiomatic
#   "completeness",
#   "non_sensitivity",
# complexity
#   "complexity",
#   "effective complexity",
#   "sparseness",
# localisation
#   "attribution_localization",
#   "auc",
#   "focus",
#   "pointing_game",
#   "relevalance_mass_accurac",
#   "relevant_rank_accuracy",
#   "top_k_intersection",
# faithfulness
#   "faithfulness_correlation",
#   "faithfulness_estimate",
#   "infidelity",
#   "monotonicity",
#   "monotonicity_correlation",
#   "sensitivity_n",
#   "selectivity",
#   "sufficiency",
#   "aopc"
# ]